## export all mxds within a folder to jpg files of the same name (resolution = 300 dpi)

import arcpy
import os
import sys

BIN_DIR = os.path.dirname(os.path.realpath(__file__))
sys.path.insert(0,BIN_DIR)
#PATH = (os.getcwd() + "\\" + "bin")
#sys.path.insert(0,PATH)

import my_utilities_NFSEG as myut


# Set some reference values according to the ReferenceDefinitions class
#-------------------------------------------
MyDef = myut.ReferenceDefinitions()


# Set ArcGIS file format version
ARCFILEVERSION = MyDef.ArcCFileVersion

# DIR for the GIS Map Templates
TEMPLATEDIR = MyDef.GisTemplateDIR
#-------------------------------------------


print("Exporting jpeg maps related to Special PEST Targets (OGR): Springsflows, baseflow, VHD/HHDs")


# Get the working PATHs
cpath_py, cpath_py_upper, cpath_py_base = myut.get_current_PATHs()

print("current directory: " + str(cpath_py))
print("parent directory: " + str(cpath_py_upper))
print("grandparent directory: " + str(cpath_py_base))


# Check and Create sub-directories as needed
#-------------------------------------------

# Sub-directory called /figures
dir_figs = (str(cpath_py) + "/figures")
if os.path.exists(dir_figs) == False:
    os.makedirs(dir_figs)
else:
    print('\nWARNING: subdirectory "figures" already exists - \n' +
          '\t existing files with the same name as those updated ' +
          'in this script will be overwritten!\n')
# END IF
#print("root directory for figures output: "+str(dir_XS))


# Sub-directory called /GIS
dir_GIS = (str(cpath_py) + "/GIS")
if os.path.exists(dir_GIS) == False:
    os.makedirs(dir_GIS)
else:
    print('\nWARNING: subdirectory "GIS" already exists - \n' +
          '\t existing files with the same name as those updated ' +
          'in this script will be overwritten!\n')
# END IF
#-------------------------------------------


# Find PEST optimal parameters output file (*.pst) in the parent directory
# and get the basename to attach to output files generated by this script
simnam = myut.get_unique_filebasename_from_suffix(cpath_py_upper,'.pst')
print("sim name: " + str(simnam))
##find optimal parameters output file (*.pst.txt) - the rest of the files get named with the pst file name in it
#num_simnams=0
#for file in os.listdir(cpath_py_upper):
#    if str(file[-4:])=='.pst':
#        simnam=file[:-4]
#        num_simnams=num_simnams+1
#if num_simnams==0:
#    print("looked for a *.pst file - but found none - stopping")
#    exit()
#elif num_simnams>1:
#    print("multiple *.pst files found in this folder - stopping")
#    exit()
#else:
#    print("sim name:"+str(simnam))

gdb=cpath_py+"/"+simnam+".gdb"
if arcpy.Exists(gdb):
    print("geodatabase for this sim exists - continuing ")
    #arcpy.Delete_management(gdb)#temp action for debugging
    #arcpy.CreateFileGDB_management(dir_sim_proc,simnam,"CURRENT")
    #exit()
else:
    #arcpy.CreateFileGDB_management(cpath_py,simnam+"_ZB","9.3")
    print("geodatabase for this sim does not exist - stopping - run earlier scripts")
    exit()


#mxdnames_noupdate = ['']
#for mxdname in mxdnames_noupdate:
#    mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#    arcpy.mapping.ExportToJPEG(mxd,  (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


#MapFigures = {'mxdname': 'OGR_Map58_EstimatedCumulativeBaseflows_cfs_2001.mxd',
#              'LyrName': 'Gage',
#              'LyrIndex': 4,
#              'FeatureClass': (simnam + '_qs_20012009')}
#MapFigures = {'mxdname': 'OGR_Map62_EstimatedCumulativeBaseflows_cfs_2009.mxd',
#              'LyrName': 'Contributing',
#              'LyrIndex': 12,
#              'FeatureClass': (simnam + '_qrqs_gagepoly_NCB')}
QS_mxds = ["OGR_Map58_EstimatedCumulativeBaseflows_cfs_2001.mxd",
           "OGR_Map62_EstimatedCumulativeBaseflows_cfs_2009.mxd"]
for mxdname in QS_mxds:
    mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
    lyrList = arcpy.mapping.ListLayers(mxd)
    for lyr in lyrList:
        if lyr.name[:4]=="Gage":
            print ("Updating" + lyr.name)
            arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_qs_20012009")
        if lyr.name[:12]=="Contributing":
            print ("Updating" + lyr.name)
            arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_qrqs_gagepoly_NCB")
    arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
    mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
    print ("Updated " + mxdname)



MapFigures = {
0: {'mxdname': 'OGR_Map51_Location_and_RelativeMagnitudesSpring_DischargeRates_cfs_2001.mxd',
    'LyrName': 'Dis',
    'LyrIndex': 3,
    'FeatureClass': (simnam + '_qsprings_2001')},
1: {'mxdname': 'OGR_Map52_Location_and_RelativeMagnitudesSpring_DischargeRates_cfs_2009.mxd',
    'LyrName': 'Dis',
    'LyrIndex': 3,
    'FeatureClass': (simnam + '_qsprings_2009')},
2: {'mxdname': 'OGR_Map53_Magnitude-1Springs_and_SpringGroups_and_EstimatedFlowrates_cfs_2001.mxd',
    'LyrName': 'Spring',
    'LyrIndex': 6,
    'FeatureClass': (simnam + '_qsprings_1st_2001')},
3: {'mxdname': 'OGR_Map54_Magnitude-1Springs_and_SpringGroups_and_EstimatedFlowrates_cfs_2009.mxd',
    'LyrName': 'Spring',
    'LyrIndex': 6,
    'FeatureClass': (simnam + '_qsprings_1st_2009')},
4: {'mxdname': 'OGR_Map55_EstimatedBaseflowPickupFlowrates_cfs_RegionA_2001.mxd',
    'LyrName': 'Gage',
    'LyrIndex': 4,
    'FeatureClass': (simnam + '_qr_20012009')},
5: {'mxdname': 'OGR_Map56_EstimatedBaseflowPickupFlowrates_cfs_RegionB_2001.mxd',
    'LyrName': 'Gage',
    'LyrIndex': 4,
    'FeatureClass': (simnam + '_qr_20012009')},
6: {'mxdname': 'OGR_Map57_EstimatedBaseflowPickupFlowrates_cfs_RegionC_2001.mxd',
    'LyrName': 'Gage',
    'LyrIndex': 4,
    'FeatureClass': (simnam + '_qr_20012009')},
7: {'mxdname': 'OGR_Map59_EstimatedBaseflowPickupFlowrates_cfs_RegionA_2009.mxd',
    'LyrName': 'Gage',
    'LyrIndex': 4,
    'FeatureClass': (simnam + '_qr_20012009')},
8: {'mxdname': 'OGR_Map60_EstimatedBaseflowPickupFlowrates_cfs_RegionB_2009.mxd',
    'LyrName': 'Gage',
    'LyrIndex': 4,
    'FeatureClass': (simnam + '_qr_20012009')},
9: {'mxdname': 'OGR_Map61_EstimatedBaseflowPickupFlowrates_cfs_RegionC_2009.mxd',
    'LyrName': 'Gage',
    'LyrIndex': 4,
    'FeatureClass': (simnam + '_qr_20012009')},
10: {'mxdname': 'OGR_Map63_VHD_FT_SAS_vsUFA_2001.mxd',
     'LyrName': 'Values',
     'LyrIndex': 6,
     'FeatureClass': (simnam + '_VHD_L1L3_targets_2001')}, #VHD mxds
11: {'mxdname': 'OGR_Map64_VHD_FT_UFA_aquifer_vsUZLFA_2001.mxd',
     'LyrName': 'Values',
     'LyrIndex': 6,
     'FeatureClass': (simnam + '_VHD_L3L5_targets_2001')},
12: {'mxdname': 'OGR_Map65_VHD_FT_SAS_vsUFA_2009.mxd',
     'LyrName': 'Values',
     'LyrIndex': 6,
     'FeatureClass': (simnam + '_VHD_L1L3_targets_2009')},
13: {'mxdname': 'OGR_Map66_VHD_FT_UFA_aquifer_vsUZLFA_2009.mxd',
     'LyrName': 'Values',
     'LyrIndex': 6,
     'FeatureClass': (simnam + '_VHD_L3L5_targets_2009')},
14: {'mxdname': 'OGR_Map67_HHD_FT_Upper_Floridan_aquifer_2001.mxd',
     'LyrName': 'HHD',
     'LyrIndex': 3,
     'FeatureClass': (simnam + '_HHD_L3_targets_01')}, #HHD mxds -- 2001
15: {'mxdname': 'OGR_Map68_HHD_FT_Upper_Floridan_aquifer_2009.mxd',
     'LyrName': 'HHD',
     'LyrIndex': 3,
     'FeatureClass': (simnam + '_HHD_L3_targets_09')} #HHD mxds -- 2009
}



# Loop through each of the Figures that need updating
#------------------------------
for i in range(len(MapFigures)):
    
    # Capture the values from the dictionary
    cur_mxdname = MapFigures[i]['mxdname']
    cur_LayerName = MapFigures[i]['LyrName']
    cur_LayerIndex = MapFigures[i]['LyrIndex']
    cur_FeatureClass = MapFigures[i]['FeatureClass']
    
    print("Processing " + cur_mxdname)
    
    mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + cur_mxdname)
    
    lyrList = arcpy.mapping.ListLayers(mxd)
    
    for lyr in lyrList:
        if lyr.name[:cur_LayerIndex] == cur_LayerName:
            arcpy.mapping.Layer.replaceDataSource(lyr, gdb, "FILEGDB_WORKSPACE", cur_FeatureClass)
    # End for loop over lyr
    
    arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + cur_mxdname[:-3] + 'jpg'), resolution=300)
    
    mxd.saveACopy( (dir_GIS + '/' + cur_mxdname), ARCFILEVERSION)
#------------------------------
    
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

###BEGIN FIGURES
#
#MapFigures = {'mxdname': 'OGR_Map51_Location_and_RelativeMagnitudesSpring_DischargeRates_cfs_2001.mxd',
#              'LyrName': 'Dis',
#              'LyrIndex': 3,
#              'FeatureClass': (simnam + '_qsprings_2001')}
#mxdname = 'OGR_Map51_Location_and_RelativeMagnitudesSpring_DischargeRates_cfs_2001.mxd'
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:3]=="Dis":
#        print ("Updating " + mxdname)
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_qsprings_2001")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#
#MapFigures = {'mxdname': 'OGR_Map52_Location_and_RelativeMagnitudesSpring_DischargeRates_cfs_2009.mxd',
#              'LyrName': 'Dis',
#              'LyrIndex': 3,
#              'FeatureClass': (simnam + '_qsprings_2009')}
#mxdname = 'OGR_Map52_Location_and_RelativeMagnitudesSpring_DischargeRates_cfs_2009.mxd'
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:3]=="Dis":
#        print ("Updating " + mxdname)
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_qsprings_2009")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#
#MapFigures = {'mxdname': 'OGR_Map53_Magnitude-1Springs_and_SpringGroups_and_EstimatedFlowrates_cfs_2001.mxd',
#              'LyrName': 'Spring',
#              'LyrIndex': 6,
#              'FeatureClass': (simnam + '_qsprings_1st_2001')}
#mxdname = 'OGR_Map53_Magnitude-1Springs_and_SpringGroups_and_EstimatedFlowrates_cfs_2001.mxd'
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:6]=="Spring":
#        print ("Updating " + mxdname)
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_qsprings_1st_2001")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#
#MapFigures = {'mxdname': 'OGR_Map54_Magnitude-1Springs_and_SpringGroups_and_EstimatedFlowrates_cfs_2009.mxd',
#              'LyrName': 'Spring',
#              'LyrIndex': 6,
#              'FeatureClass': (simnam + '_qsprings_1st_2009')}
#mxdname = 'OGR_Map54_Magnitude-1Springs_and_SpringGroups_and_EstimatedFlowrates_cfs_2009.mxd'
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:6]=="Spring":
#        print ("Updating" + lyr.name)
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_qsprings_1st_2009")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#print ("Updated " + mxdname)
#
#
#MapFigures = {'mxdname': 'OGR_Map55_EstimatedBaseflowPickupFlowrates_cfs_RegionA_2001.mxd',
#              'LyrName': 'Gage',
#              'LyrIndex': 4,
#              'FeatureClass': (simnam + '_qr_20012009')}
#MapFigures = {'mxdname': 'OGR_Map56_EstimatedBaseflowPickupFlowrates_cfs_RegionB_2001.mxd',
#              'LyrName': 'Gage',
#              'LyrIndex': 4,
#              'FeatureClass': (simnam + '_qr_20012009')}
#MapFigures = {'mxdname': 'OGR_Map57_EstimatedBaseflowPickupFlowrates_cfs_RegionC_2001.mxd',
#              'LyrName': 'Gage',
#              'LyrIndex': 4,
#              'FeatureClass': (simnam + '_qr_20012009')}
#MapFigures = {'mxdname': 'OGR_Map59_EstimatedBaseflowPickupFlowrates_cfs_RegionA_2009.mxd',
#              'LyrName': 'Gage',
#              'LyrIndex': 4,
#              'FeatureClass': (simnam + '_qr_20012009')}
#MapFigures = {'mxdname': 'OGR_Map60_EstimatedBaseflowPickupFlowrates_cfs_RegionB_2009.mxd',
#              'LyrName': 'Gage',
#              'LyrIndex': 4,
#              'FeatureClass': (simnam + '_qr_20012009')}
#MapFigures = {'mxdname': 'OGR_Map61_EstimatedBaseflowPickupFlowrates_cfs_RegionC_2009.mxd',
#              'LyrName': 'Gage',
#              'LyrIndex': 4,
#              'FeatureClass': (simnam + '_qr_20012009')}
#QR_mxds = ["OGR_Map55_EstimatedBaseflowPickupFlowrates_cfs_RegionA_2001.mxd",
#           "OGR_Map56_EstimatedBaseflowPickupFlowrates_cfs_RegionB_2001.mxd",
#           "OGR_Map57_EstimatedBaseflowPickupFlowrates_cfs_RegionC_2001.mxd",
#           "OGR_Map59_EstimatedBaseflowPickupFlowrates_cfs_RegionA_2009.mxd",
#           "OGR_Map60_EstimatedBaseflowPickupFlowrates_cfs_RegionB_2009.mxd",
#           "OGR_Map61_EstimatedBaseflowPickupFlowrates_cfs_RegionC_2009.mxd"]
#for mxdname in QR_mxds:
#    mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#    lyrList = arcpy.mapping.ListLayers(mxd)
#    for lyr in lyrList:
#        if lyr.name[:4]=="Gage":
#            print ("Updating" + lyr.name)
#            arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_qr_20012009")
#    arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#    mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#    print ("Updated " + mxdname)
#
#
#MapFigures = {'mxdname': 'OGR_Map58_EstimatedCumulativeBaseflows_cfs_2001.mxd',
#              'LyrName': 'Gage',
#              'LyrIndex': 4,
#              'FeatureClass': (simnam + '_qs_20012009')}
#MapFigures = {'mxdname': 'OGR_Map62_EstimatedCumulativeBaseflows_cfs_2009.mxd',
#              'LyrName': 'Contributing',
#              'LyrIndex': 12,
#              'FeatureClass': (simnam + '_qrqs_gagepoly_NCB')}
#QS_mxds = ["OGR_Map58_EstimatedCumulativeBaseflows_cfs_2001.mxd",
#           "OGR_Map62_EstimatedCumulativeBaseflows_cfs_2009.mxd"]
#for mxdname in QS_mxds:
#    mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#    lyrList = arcpy.mapping.ListLayers(mxd)
#    for lyr in lyrList:
#        if lyr.name[:4]=="Gage":
#            print ("Updating" + lyr.name)
#            arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_qs_20012009")
#        if lyr.name[:12]=="Contributing":
#            print ("Updating" + lyr.name)
#            arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_qrqs_gagepoly_NCB")
#    arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#    mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#    print ("Updated " + mxdname)
#
##VHD mxds
#MapFigures = {'mxdname': 'OGR_Map63_VHD_FT_SAS_vsUFA_2001.mxd',
#              'LyrName': 'Values',
#              'LyrIndex': 6,
#              'FeatureClass': (simnam + '_VHD_L1L3_targets_2001')}
#mxdname = "OGR_Map63_VHD_FT_SAS_vsUFA_2001.mxd"
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:6]=="Values":
#        #print lyr.name
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_VHD_L1L3_targets_2001")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#print ("Updated " + mxdname)
#
#MapFigures = {'mxdname': 'OGR_Map64_VHD_FT_UFA_aquifer_vsUZLFA_2001.mxd',
#              'LyrName': 'Values',
#              'LyrIndex': 6,
#              'FeatureClass': (simnam + '_VHD_L3L5_targets_2001')}
#mxdname = "OGR_Map64_VHD_FT_UFA_aquifer_vsUZLFA_2001.mxd"
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:6]=="Values":
#        #print lyr.name
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_VHD_L3L5_targets_2001")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#print ("Updated " + mxdname)
#
#MapFigures = {'mxdname': 'OGR_Map65_VHD_FT_SAS_vsUFA_2009.mxd',
#              'LyrName': 'Values',
#              'LyrIndex': 6,
#              'FeatureClass': (simnam + '_VHD_L1L3_targets_2009')}
#mxdname = "OGR_Map65_VHD_FT_SAS_vsUFA_2009.mxd"
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:6]=="Values":
#        #print lyr.name
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_VHD_L1L3_targets_2009")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#print ("Updated " + mxdname)
#
#
#MapFigures = {'mxdname': 'OGR_Map66_VHD_FT_UFA_aquifer_vsUZLFA_2009.mxd',
#              'LyrName': 'Values',
#              'LyrIndex': 6,
#              'FeatureClass': (simnam + '_VHD_L3L5_targets_2009')}
#mxdname = "OGR_Map66_VHD_FT_UFA_aquifer_vsUZLFA_2009.mxd"
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:6]=="Values":
#        #print lyr.name
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_VHD_L3L5_targets_2009")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#print ("Updated " + mxdname)
#
##HHD mxds
##2001
#MapFigures = {'mxdname': 'OGR_Map67_HHD_FT_Upper_Floridan_aquifer_2001.mxd',
#              'LyrName': 'HHD',
#              'LyrIndex': 3,
#              'FeatureClass': (simnam + '_HHD_L3_targets_01')}
#mxdname = "OGR_Map67_HHD_FT_Upper_Floridan_aquifer_2001.mxd"
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:3]=="HHD":
#        print (lyr.name)
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_HHD_L3_targets_01")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#print ("Updated " + mxdname)
##2009
#MapFigures = {'mxdname': 'OGR_Map68_HHD_FT_Upper_Floridan_aquifer_2009.mxd',
#              'LyrName': 'HHD',
#              'LyrIndex': 3,
#              'FeatureClass': (simnam + '_HHD_L3_targets_09')}
#mxdname = "OGR_Map68_HHD_FT_Upper_Floridan_aquifer_2009.mxd"
#mxd = arcpy.mapping.MapDocument(TEMPLATEDIR + mxdname)
#lyrList = arcpy.mapping.ListLayers(mxd)
#for lyr in lyrList:
#    if lyr.name[:3]=="HHD":
#        print (lyr.name)
#        arcpy.mapping.Layer.replaceDataSource(lyr,gdb,"FILEGDB_WORKSPACE",simnam+"_HHD_L3_targets_09")
#arcpy.mapping.ExportToJPEG(mxd, (dir_figs + '/' + mxdname[:-3] + 'jpg'), resolution=300)
#mxd.saveACopy( (dir_GIS + '/' + mxdname), ARCFILEVERSION)
#print ("Updated " + mxdname)
