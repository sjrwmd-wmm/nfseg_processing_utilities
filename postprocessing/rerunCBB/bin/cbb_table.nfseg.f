C	READ IN A BINARY CBB FILE AND EXPORT IT AS A TABLE

	PROGRAM MAIN

	PARAMETER(NROW=752,NCOL=704,NLAY=7,NSP=2,NCBB=11)
	CHARACTER*16 TEXT1(NCBB)
	INTEGER IT1,IT2,IT3,NC,NR,ILAY
	INTEGER IBOUND(NCOL,NROW,NLAY)

	CHARACTER INFILE*100,OFILE*100,IBOUNDFILE*100

      dimension XVS(NCOL,NROW,NLAY,NCBB)
	DIMENSION FLOW_LEFT(NCOL,NROW,NLAY),FLOW_BACK(NCOL,NROW,NLAY),
     &	FLOW_UPPER(NCOL,NROW,NLAY),BALANCE(NCOL,NROW,NLAY)

	write(*,*)"NAME OF INPUT CELL-BY-CELL FILE:"
	read(*,*)INFILE

C	1 1    CONSTANT HEAD 704 752 7	!1
C	1 1 FLOW RIGHT FACE  704 752 7	!2
C	1 1 FLOW FRONT FACE  704 752 7	!3
C	1 1 FLOW LOWER FACE  704 752 7	!4
C	1 1            WELLS 704 752 7	!5
C	1 1           DRAINS 704 752 7	!6
C	1 1    RIVER LEAKAGE 704 752 7	!7
C	1 1               ET 704 752 7	!8
C	1 1  HEAD DEP BOUNDS 704 752 7	!9
C	1 1         RECHARGE 704 752 7	!10
C	1 1             MNW2 704 752 7	!11
C	1 2    CONSTANT HEAD 704 752 7	!1
C	1 2 FLOW RIGHT FACE  704 752 7	!2
C	1 2 FLOW FRONT FACE  704 752 7	!3
C	1 2 FLOW LOWER FACE  704 752 7	!4
C	1 2            WELLS 704 752 7	!5
C	1 2           DRAINS 704 752 7	!6
C	1 2    RIVER LEAKAGE 704 752 7	!7
C	1 2               ET 704 752 7	!8
C	1 2  HEAD DEP BOUNDS 704 752 7	!9
C	1 1         RECHARGE 704 752 7	!10
C	1 2             MNW2 704 752 7	!11

	DO ILAY=1,NLAY	
	WRITE(*,*)'IBOUND FILE FOR LAYER ',ILAY
	READ(*,*)IBOUNDFILE
	OPEN(10,FILE=TRIM(IBOUNDFILE),STATUS='OLD')
	READ(10,*)IBOUND(:,:,ILAY)
	CLOSE(10)
	END DO

	OPEN(22,FILE=trim(INFILE),FORM='BINARY',STATUS='OLD')

	DO M=1,NSP
	XVS = 0.
	FLOW_LEFT = 0.
	FLOW_BACK = 0.
	FLOW_UPPER = 0.
	BALANCE = 0.

	DO N=1,NCBB

	 READ(22) IT1,IT2,TEXT1(N),NC,NR,ILAY
	 print*, IT1,IT2,TEXT1(N),NC,NR,ILAY
	 READ(22) XVS(:,:,:,N)

	END DO

C	FLOW LEFT FACE
c	WRITE(*,*)"ASSIGNING FLOW LEFT FACE"
C	DO J=2,NCOL
C	QLEFT(J,:,:)=XVS(J-1,:,:,2)
C	ENDDO
	FLOW_LEFT(2:NCOL,:,:)=XVS(1:NCOL-1,:,:,2)
C	FLOW_LEFT = FLOW_LEFT*FLOAT(ABS(IBOUND))

C	FLOW BACK FACE
c	WRITE(*,*)"ASSIGNING FLOW BACK FACE"
C	DO I=2,NROW
C	QBACK(:,I,:)=XVS(:,I-1,:,3)
C	ENDDO
	FLOW_BACK(:,2:NROW,:)=XVS(:,1:NROW-1,:,3)
C	FLOW_BACK=FLOW_BACK*FLOAT(ABS(IBOUND))
 
C	FLOW UPPER FACE
C	WRITE(*,*)"ASSIGNING FLOW UPPER FACE"
C	DO K=2,NLAY
C	QUPPER(:,:,K)=XVS(:,:,K-1,4)
C	ENDDO 
	FLOW_UPPER(:,:,2:NLAY)=XVS(:,:,1:NLAY-1,4)
C	FLOW_UPPER=FLOW_UPPER*FLOAT(ABS(IBOUND))

C	FLOW FWL UPPER FACE
C	FWL_FLOW_UPPER(:,:,2:NLAY)=XVS(:,:,1:NLAY-1,8)

	BALANCE =XVS(:,:,:,1) 
	BALANCE =BALANCE 
     &	- XVS(:,:,:,2) - XVS(:,:,:,3) - XVS(:,:,:,4)
	
      DO N=5,NCBB	
	BALANCE =BALANCE 
     &	+ XVS(:,:,:,N)
	ENDDO
	BALANCE =BALANCE 
     &	+ FLOW_LEFT + FLOW_BACK + FLOW_UPPER 


c	CFD2MGD = 9./1203125.
	CFD2MGD = 1.

	XVS = CFD2MGD*XVS
	FLOW_LEFT = FLOW_LEFT*CFD2MGD
	FLOW_BACK = FLOW_BACK*CFD2MGD
	FLOW_UPPER = FLOW_UPPER*CFD2MGD
	BALANCE = BALANCE*CFD2MGD

C
	write(*,*)"NAME OF OUTPUT CELL-BY-CELL WATER BUDGET FILE:"
	read(*,*)OFILE
c

	IF (M.EQ.1) THEN
	OPEN(26,FILE='CBB.TABLE.HEADER',STATUS='UNKNOWN')
C	WRITE(25,20)'SEQNUM','LAY','ROW','COL',(TEXT1(N),N=1,NCBB),
C	& " FLOW LEFT FACE ",
C	& " FLOW BACK FACE ",
C	& " FLOW UPPER FACE ",
C	& "BALANCE",
C	& "IBOUND"
	WRITE(26,20)'CELLID','LAY','ROW','COL',
     & "CONSTANT_HEAD",
     & "FLOW_RIGHT_FACE",
     & "FLOW_FRONT_FACE",
     & "FLOW_LOWER_FACE",
     & "WELLS",
     & "DRAINS",
     & "RIVER_LEAKAGE",
     & "ET",
     & "HEAD_DEP_BOUNDS",
     & "RECHARGE",
     & "MNW2",
     & "FLOW_LEFT_FACE",
     & "FLOW_BACK_FACE",
     & "FLOW_UPPER_FACE",
     & "BALANCE",
     & "IBOUND"
	CLOSE(26)
	END IF

	OPEN(25,FILE=trim(OFILE),STATUS='UNKNOWN')
	WRITE(25,20)'LAYER',
C     & "FLOW_RIGHT_FACE",
C     & "FLOW_FRONT_FACE",
     & "COUNT_ACTIVE_CELLS",
     & "FLOW_UPPER_FACE_inflow",
     & "FLOW_UPPER_FACE_outflow",
     & "FLOW_LOWER_FACE_inflow",
     & "FLOW_LOWER_FACE_outflow",
     & "CONSTANT_HEAD_inflow",
     & "CONSTANT_HEAD_outflow",
     & "WELLS_inflow",
     & "WELLS_outflow",
     & "DRAINS_inflow",
     & "DRAINS_outflow",
     & "RIVER_LEAKAGE_inflow",
     & "RIVER_LEAKAGE_outflow",
     & "ET_inflow",
     & "ET_outflow",
     & "HEAD_DEP_BOUNDS_inflow",
     & "HEAD_DEP_BOUNDS_outflow",
     & "RECHARGE_inflow",
     & "RECHARGE_outflow",
     & "MNW2_inflow",
     & "MNW2_outflow",
C     & "FLOW_LEFT_FACE",
C     & "FLOW_BACK_FACE",
     & "BALANCE"
C     & "IBOUND"

	DO K =1,NLAY
	WRITE(25,30)K,
C     &	K,(XVS(J,I,K,N),N=1,NCBB),
C     &	FLOW_LEFT(J,I,K),
C     &    FLOW_BACK(J,I,K),
     & SUM(SUM(ABS(IBOUND(:,:,K)),DIM=1),DIM=1),
     & SUM(SUM(FLOW_UPPER(:,:,K),DIM=1,MASK=FLOW_UPPER(:,:,K).GT.0),
     &    DIM=1),
     & SUM(SUM(-FLOW_UPPER(:,:,K),DIM=1,MASK=FLOW_UPPER(:,:,K).LT.0),
     &    DIM=1),
     & SUM(SUM(-XVS(:,:,K,4),DIM=1,MASK=XVS(:,:,K,4).LT.0),
     &    DIM=1),
     & SUM(SUM(XVS(:,:,K,4),DIM=1,MASK=XVS(:,:,K,4).GT.0),
     &    DIM=1),
C
     & SUM(SUM(XVS(:,:,K,1),DIM=1,MASK=XVS(:,:,K,1).GT.0),
     &    DIM=1),
     & SUM(SUM(-XVS(:,:,K,1),DIM=1,MASK=XVS(:,:,K,1).LT.0),
     &    DIM=1),
C
     & ((SUM(SUM(XVS(:,:,K,N),DIM=1,MASK=XVS(:,:,K,N).GT.0),
     &    DIM=1),
     & SUM(SUM(-XVS(:,:,K,N),DIM=1,MASK=XVS(:,:,K,N).LT.0),
     &    DIM=1)),N=5,NCBB),
C
     & SUM(SUM(BALANCE(:,:,K),DIM=1),DIM=1)
C     &	BALANCE(J,I,K)

C	DO I =1,NROW
C	DO J =1,NCOL

C	WRITE(25,30)(K-1)*NROW*NCOL+(I-1)*NCOL+J,
C     &	K,I,J,(XVS(J,I,K,N),N=1,NCBB),
C     &	FLOW_LEFT(J,I,K),
C     &    FLOW_BACK(J,I,K),
C     &    FLOW_UPPER(J,I,K),
C     &	BALANCE(J,I,K),
C     &	IBOUND(J,I,K)
C
C	END DO
C	END DO

	END DO
	CLOSE(25)

	END DO
        CLOSE(22)

10	FORMAT(5A10,16A20)
20	FORMAT(A5,30A30)
30	FORMAT(I5,I30,30F30.0,I20)
40	FORMAT(5I10,F20.0,I20)

	STOP
	END
